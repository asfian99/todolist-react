[{"C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\index.jsx":"1","C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\App.jsx":"2","C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\components\\List.jsx":"3","C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\components\\Alert.jsx":"4"},{"size":506,"mtime":1606881370923,"results":"5","hashOfConfig":"6"},{"size":3389,"mtime":1606911201449,"results":"7","hashOfConfig":"6"},{"size":1034,"mtime":1606909744202,"results":"8","hashOfConfig":"6"},{"size":416,"mtime":1606908052988,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"a6w48k",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\index.jsx",[],["20","21"],"C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\App.jsx",["22"],"import { useEffect, useState } from \"react\";\nimport List from \"./components/List\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      // alert karena todo kosong\n      showAlert(true, \"The Form is Empty\", \"danger\");\n    } else if (name && isEditing) {\n      // edit todo\n      setList(\n        list.map((todo) => {\n          if (todo.id === editID) {\n            return { ...todo, title: name };\n          }\n          return todo;\n        })\n      );\n      setName(\"\");\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, \"Todo edited succesfully\", \"success\");\n    } else {\n      // new todo\n      showAlert(true, \"Todo has been added successfully\", \"success\");\n      const newTodo = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newTodo]);\n      setName(\"\");\n    }\n  };\n\n  const showAlert = (show = false, msg = \"\", type = \"\") => {\n    setAlert({ show, msg, type });\n  };\n  const clearList = () => {\n    showAlert(true, \"Todos has been cleared\", \"danger\");\n    setList([]);\n  };\n  const removeTodo = (id) => {\n    showAlert(true, \"Todo deleted\", \"danger\");\n    setList(list.filter((todo) => todo.id !== id));\n  };\n  const editTodo = (id) => {\n    const selectedTodo = list.find((todo) => todo.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(selectedTodo.title);\n  };\n\n  return (\n    <section className=\"flex h-screen bg-gray-200 text-gray-800\">\n      <div className=\"p-10 w-1/2 m-auto bg-white shadow-lg rounded text-center\">\n        <h1 className=\"font-semibold text-2xl text-center\">Simple Todo List</h1>\n\n        <form onSubmit={handleSubmit} className=\"my-4\">\n          <div className=\"flex justify-between\">\n            <input\n              type=\"text\"\n              placeholder=\"Go To Bed\"\n              className=\"p-2 mx-1 flex-grow border-2 bg-gray-100 rounded\"\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n            <button\n              type=\"submit\"\n              className={`py-2 px-4 mx-1 flex-none border-2 text-white rounded transition duration-200 ${\n                isEditing\n                  ? \"border-green-500 bg-green-500 hover:bg-green-700\"\n                  : \"border-indigo-500 bg-indigo-500 hover:bg-indigo-700\"\n              }`}\n              autoFocus\n            >\n              {isEditing ? \"Edit\" : \"Add\"}\n            </button>\n          </div>\n          {alert.show && (\n            <Alert {...alert} removeAlert={showAlert} list={list} />\n          )}\n        </form>\n\n        {list.length > 0 && (\n          <div>\n            <List items={list} removeTodo={removeTodo} editTodo={editTodo} />\n            <button\n              className=\"py-2 mt-4 ml-auto w-1/2 bg-red-500 hover:bg-red-700 text-white font-medium tracking-wider rounded transition duration-200\"\n              onClick={clearList}\n            >\n              Clear All\n            </button>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\components\\List.jsx",[],"C:\\Users\\ThinkPad E450\\Documents\\Coding Project\\React Advanced\\simple-todolist\\src\\components\\Alert.jsx",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":10,"nodeType":"29","messageId":"30","endLine":1,"endColumn":19},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]